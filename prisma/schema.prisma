generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:root@localhost:3306/influencer_marking_system"
}

model User {
  id                  BigInt               @id
  name                String?
  email               String               @unique
  emailVerified       DateTime?
  image               String?
  username            String?              @unique
  displayName         String?
  role                String               @default("USER")
  department          String?
  status              Int                  @default(1) // 0-无效，1-有效
  preferences         Json?
  timezone            String?
  language            String               @default("zh-CN")
  lastLogin           Int?
  loginCount          Int                  @default(0)
  createdAt           Int?
  updatedAt           Int?

  @@index([status])
  @@map("users")
}

model Account {
  id                BigInt  @id
  userId            BigInt  // 关联到User.id，但没有外键约束
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  status            Int     @default(1) // 0-无效，1-有效

  @@unique([provider, providerAccountId])
  @@index([userId])
  @@index([status])
  @@map("accounts")
}

model Session {
  id           BigInt   @id
  sessionToken String   @unique
  userId       BigInt   // 关联到User.id，但没有外键约束
  expires      DateTime
  status       Int      @default(1) // 0-无效，1-有效

  @@index([userId])
  @@index([status])
  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  status     Int      @default(1) // 0-无效，1-有效

  @@unique([identifier, token])
  @@index([status])
  @@map("verificationtokens")
}

model Platform {
  id             BigInt       @id
  name           String       @unique
  displayName    String
  apiEndpoint    String?
  apiConfig      Json?
  status         Int          @default(1) // 0-无效，1-有效
  createdAt      Int?
  updatedAt      Int?

  @@index([status])
  @@map("platforms")
}

model Influencer {
  id                    BigInt                     @id
  platformId            BigInt                     // 关联到Platform.id，但没有外键约束
  platformUserId        String
  username              String?
  displayName           String?
  avatarUrl             String?
  bio                   String?                    @db.Text
  whatsappAccount       String?
  email                 String?
  phone                 String?
  wechat                String?
  telegram              String?
  country               String?
  region                String?
  city                  String?
  timezone              String?
  zipCode               String?
  province              String?
  street                String?
  address1              String?
  address2              String?
  receiverPhone         String?
  receiveName           String?
  gender                String?
  ageRange              String?
  language              String?
  followersCount        Int                        @default(0)
  followingCount        Int                        @default(0)
  totalLikes            Int                        @default(0) // 总获赞数
  totalVideos           Int                        @default(0)
  avgVideoViews         Int                        @default(0)
  engagementRate        Float?                     // 互动率 (0-100)
  primaryCategory       String?
  contentStyle          Json?
  contentLanguage       String?
  tendencyCategory      Json?
  qualityScore          Float?
  riskLevel             String                     @default("unknown")
  blacklistReason       String?                    @db.Text
  dataSource            String                     @default("manual")
  lastDataSync          Int?
  dataAccuracy          Float?
  cooperateStatus       Int?
  hasSign               Int?
  lastCooperateTime     Int?
  cooperateProductCount Int?
  fulfillCount          Int?
  cooperateProductName  String?
  correspondScore       Float?
  avgFulfillDays        Int?
  videoStyle            Json?
  videoStyleForUs       Json?
  contentScore          Float?
  orderScore            Float?
  adsRoi                Float?
  gmvTotal              String?
  gmvCountryRank        Int?
  gmvVideo              String?
  gmvLive               String?
  gpmVideo              String?
  gpmLive               String?
  status                Int                        @default(1) // 0-无效，1-有效
  createdAt             Int?
  updatedAt             Int?
  createdBy             BigInt?                    // 关联到User.id，但没有外键约束
  updatedBy             BigInt?
  platformSpecificData  Json?
  notes                 String?                    @db.Text

  @@unique([platformId, platformUserId])
  @@index([platformId])
  @@index([followersCount])
  @@index([primaryCategory])
  @@index([status])
  @@index([qualityScore])
  @@index([country])
  @@index([createdAt])
  @@index([createdBy])
  @@map("influencers")
}

model InfluencerMetricsHistory {
  id             BigInt     @id
  influencerId   BigInt     // 关联到Influencer.id，但没有外键约束
  followersCount Int
  followingCount Int
  totalLikes     Int
  totalVideos    Int
  avgVideoViews  Int
  engagementRate Float?
  recordDate     Int
  status         Int        @default(1) // 0-无效，1-有效
  createdAt      Int?

  @@index([influencerId])
  @@index([recordDate])
  @@index([status])
  @@map("influencer_metrics_history")
}

model Tag {
  id                 BigInt                  @id
  name               String                  @unique
  displayName        String?
  description        String?
  category           String                  @default("CONTENT")
  color              String?
  icon               String?
  parentId           BigInt?                 // 关联到Tag.id（自引用），但没有外键约束
  status             Int                     @default(1) // 0-无效，1-有效
  sortOrder          Int                     @default(0)
  isSystem           Boolean                 @default(false)
  createdAt          Int?
  updatedAt          Int?
  createdBy          BigInt?                 // 关联到User.id，但没有外键约束

  @@index([category])
  @@index([parentId])
  @@index([status])
  @@index([sortOrder])
  @@index([createdBy])
  @@map("tags")
}

model InfluencerTag {
  id           BigInt     @id
  influencerId BigInt     // 关联到Influencer.id，但没有外键约束
  tagId        BigInt     // 关联到Tag.id，但没有外键约束
  confidence   Float?     @default(1)
  source       String?    @default("manual")
  status       Int        @default(1) // 0-无效，1-有效
  createdAt    Int?
  createdBy    BigInt?    // 关联到User.id，但没有外键约束

  @@unique([influencerId, tagId])
  @@index([influencerId])
  @@index([tagId])
  @@index([status])
  @@map("influencer_tags")
}

model FulfillmentRecordTag {
  id                    BigInt            @id
  fulfillmentRecordId   BigInt            // 关联到FulfillmentRecord.id，但没有外键约束
  tagId                 BigInt            // 关联到Tag.id，但没有外键约束
  confidence            Float?            @default(1)
  source                String?           @default("manual")
  status                Int               @default(1) // 0-无效，1-有效
  createdAt             Int?
  createdBy             BigInt?           // 关联到User.id，但没有外键约束

  @@unique([fulfillmentRecordId, tagId])
  @@index([fulfillmentRecordId])
  @@index([tagId])
  @@index([status])
  @@map("fulfillment_record_tags")
}

model CooperationProduct {
  id                  BigInt              @id
  name                String
  description         String?
  brand               String?
  category            String?
  price               Float?
  currency            String?             @default("USD")
  budget              Float?
  targetAudience      String?
  contentRequirements String?
  deliverables        Json?
  kpis                Json?
  startDate           Int?
  endDate             Int?
  status              Int                 @default(1) // 0-无效，1-有效
  priority            String?             @default("medium")
  createdAt           Int?
  updatedAt           Int?
  createdBy           BigInt?             // 关联到User.id，但没有外键约束

  @@index([status])
  @@index([startDate])
  @@index([category])
  @@index([createdBy])
  @@map("cooperation_products")
}

model FulfillmentRecord {
  id                 BigInt                  @id
  influencerId       BigInt                  // 关联到Influencer.id，但没有外键约束
  productId          BigInt                  // 关联到CooperationProduct.id，但没有外键约束
  productName        String
  cooperationType    String
  fulfillmentDesc    String?
  fulfillmentStatus  String?
  needSample         Int?
  cooperateStatus    Int?
  hasSign            Int?
  actualFulfillTime  Int?
  correspondScore    Float?
  fulfillDays        Int?
  sampleDeliveryTime Int?
  firstTouchTime     Int?
  contactDate        Int?
  videoStyle         String?
  videoStyleForUs    String?
  contentScore       Float?
  orderScore         Float?
  adsRoi             Float?
  videoQuantityDesc  String?
  liveQuantityDesc   String?
  ownerId            BigInt?
  ownerName          String?
  fulfillRemark      String?
  status             Int                     @default(1) // 0-无效，1-有效
  createdAt          Int?
  updatedAt          Int?
  createdBy          BigInt?                 // 关联到User.id，但没有外键约束

  @@index([influencerId])
  @@index([productId])
  @@index([status])
  @@index([contactDate])
  @@index([fulfillmentStatus])
  @@index([createdBy])
  @@map("fulfillment_records")
}

model CommunicationLog {
  id                  BigInt             @id
  influencerId        BigInt             // 关联到Influencer.id，但没有外键约束
  fulfillmentRecordId BigInt?            // 关联到FulfillmentRecord.id，但没有外键约束
  type                String
  direction           String
  subject             String?
  content             String
  attachments         Json?
  status              Int                @default(1) // 0-无效，1-有效
  isImportant         Boolean            @default(false)
  isFollowUpRequired  Boolean            @default(false)
  followUpDate        Int?
  communicationDate   Int
  createdAt           Int?
  createdBy           BigInt?            // 关联到User.id，但没有外键约束

  @@index([influencerId])
  @@index([fulfillmentRecordId])
  @@index([communicationDate])
  @@index([type])
  @@index([status])
  @@index([createdBy])
  @@map("communication_logs")
}

model ImportRecord {
  id             BigInt  @id
  fileName       String
  fileSize       Int?
  fileType       String?
  importType     String
  status         Int     @default(0) // 0-处理中，1-成功，2-失败
  totalRows      Int?    @default(0)
  successRows    Int?    @default(0)
  errorRows      Int?    @default(0)
  duplicateRows  Int?    @default(0)
  errorLog       String? @db.Text
  mapping        String? @db.Text
  startTime      Int?
  endTime        Int?
  processingTime Int?
  createdAt      Int?
  updatedAt      Int?
  createdBy      BigInt? // 关联到User.id，但没有外键约束

  @@index([importType])
  @@index([status])
  @@index([createdAt])
  @@map("import_records")
}

model SystemConfig {
  id          BigInt  @id
  key         String  @unique
  value       String
  category    String? @default("general")
  description String?
  isPublic    Boolean @default(false)
  status      Int     @default(1) // 0-无效，1-有效
  createdAt   Int?
  updatedAt   Int?

  @@index([category])
  @@index([status])
  @@map("system_configs")
}

model AuditLog {
  id         BigInt  @id
  userId     BigInt? // 关联到User.id，但没有外键约束
  action     String
  resource   String
  resourceId BigInt?
  oldValues  String? @db.Text
  newValues  String? @db.Text
  ip         String?
  userAgent  String?
  status     Int     @default(1) // 0-无效，1-有效
  createdAt  Int?

  @@index([userId])
  @@index([action])
  @@index([resource])
  @@index([createdAt])
  @@index([status])
  @@map("audit_logs")
}
