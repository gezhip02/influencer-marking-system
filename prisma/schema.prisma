generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:Supabase123!@db.efzpntcevdiwkaqubrxq.supabase.co:5432/postgres?sslmode=require"
}

model User {
  id                  BigInt               @id
  name                String?
  email               String               @unique
  emailVerified       DateTime?
  image               String?
  username            String?              @unique
  displayName         String?
  role                String               @default("USER")
  department          String?
  status              Int                  @default(1) // 0-无效，1-有效
  preferences         Json?
  timezone            String?
  language            String               @default("zh-CN")
  lastLogin           Int?
  loginCount          Int                  @default(0)
  createdAt           Int?
  updatedAt           Int?

  @@index([status])
  @@map("users")
}

model Account {
  id                BigInt  @id
  userId            BigInt  // 关联到User.id，但没有外键约束
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  status            Int     @default(1) // 0-无效，1-有效

  @@unique([provider, providerAccountId])
  @@index([userId])
  @@index([status])
  @@map("accounts")
}

model Session {
  id           BigInt   @id
  sessionToken String   @unique
  userId       BigInt   // 关联到User.id，但没有外键约束
  expires      DateTime
  status       Int      @default(1) // 0-无效，1-有效

  @@index([userId])
  @@index([status])
  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  status     Int      @default(1) // 0-无效，1-有效

  @@unique([identifier, token])
  @@index([status])
  @@map("verificationtokens")
}

model Platform {
  id             BigInt       @id
  name           String       @unique
  displayName    String
  apiEndpoint    String?
  apiConfig      Json?
  status         Int          @default(1) // 0-无效，1-有效
  createdAt      Int?
  updatedAt      Int?

  @@index([status])
  @@map("platforms")
}

model Influencer {
  id                    BigInt                     @id
  platformId            BigInt                     // 关联到Platform.id，但没有外键约束
  platformUserId        String
  username              String?
  displayName           String?
  avatarUrl             String?
  bio                   String?                    @db.Text
  whatsappAccount       String?
  email                 String?
  phone                 String?
  wechat                String?
  telegram              String?
  country               String?
  region                String?
  city                  String?
  timezone              String?
  zipCode               String?
  province              String?
  street                String?
  address1              String?
  address2              String?
  receiverPhone         String?
  receiveName           String?
  gender                String?
  ageRange              String?
  language              String?
  followersCount        Int                        @default(0)
  followingCount        Int                        @default(0)
  totalLikes            Int                        @default(0) // 总获赞数
  totalVideos           Int                        @default(0)
  avgVideoViews         Int                        @default(0)
  engagementRate        Float?                     // 互动率 (0-100)
  primaryCategory       String?
  contentStyle          Json?
  contentLanguage       String?
  tendencyCategory      Json?
  qualityScore          Float?
  riskLevel             String                     @default("unknown")
  blacklistReason       String?                    @db.Text
  dataSource            String                     @default("manual")
  lastDataSync          Int?
  dataAccuracy          Float?
  cooperateStatus       Int?
  hasSign               Int?
  lastCooperateTime     Int?
  cooperateProductCount Int?
  fulfillCount          Int?
  cooperateProductName  String?
  correspondScore       Float?
  avgFulfillDays        Int?
  videoStyle            Json?
  videoStyleForUs       Json?
  contentScore          Float?
  orderScore            Float?
  adsRoi                Float?
  gmvTotal              String?
  gmvCountryRank        Int?
  gmvVideo              String?
  gmvLive               String?
  gpmVideo              String?
  gpmLive               String?
  status                Int                        @default(1) // 0-无效，1-有效
  createdAt             Int?
  updatedAt             Int?
  createdBy             BigInt?                    // 关联到User.id，但没有外键约束
  updatedBy             BigInt?
  platformSpecificData  Json?
  notes                 String?                    @db.Text

  @@unique([platformId, platformUserId])
  @@index([platformId])
  @@index([followersCount])
  @@index([primaryCategory])
  @@index([status])
  @@index([qualityScore])
  @@index([country])
  @@index([createdAt])
  @@index([createdBy])
  @@map("influencers")
}

model InfluencerMetricsHistory {
  id             BigInt     @id
  influencerId   BigInt     // 关联到Influencer.id，但没有外键约束
  followersCount Int
  followingCount Int
  totalLikes     Int
  totalVideos    Int
  avgVideoViews  Int
  engagementRate Float?
  recordDate     Int
  status         Int        @default(1) // 0-无效，1-有效
  createdAt      Int?

  @@index([influencerId])
  @@index([recordDate])
  @@index([status])
  @@map("influencer_metrics_history")
}

model Tag {
  id                 BigInt                  @id
  name               String                  @unique
  displayName        String?
  description        String?
  category           String                  @default("CONTENT")
  color              String?
  icon               String?
  parentId           BigInt?                 // 关联到Tag.id（自引用），但没有外键约束
  status             Int                     @default(1) // 0-无效，1-有效
  sortOrder          Int                     @default(0)
  isSystem           Boolean                 @default(false)
  createdAt          Int?
  updatedAt          Int?
  createdBy          BigInt?                 // 关联到User.id，但没有外键约束

  @@index([category])
  @@index([parentId])
  @@index([status])
  @@index([sortOrder])
  @@index([createdBy])
  @@map("tags")
}

model InfluencerTag {
  id           BigInt     @id
  influencerId BigInt     // 关联到Influencer.id，但没有外键约束
  tagId        BigInt     // 关联到Tag.id，但没有外键约束
  confidence   Float?     @default(1)
  source       String?    @default("manual")
  status       Int        @default(1) // 0-无效，1-有效
  createdAt    Int?
  createdBy    BigInt?    // 关联到User.id，但没有外键约束

  @@unique([influencerId, tagId])
  @@index([influencerId])
  @@index([tagId])
  @@index([status])
  @@map("influencer_tags")
}

model CooperationProduct {
  id                  BigInt              @id
  name                String
  description         String?
  brand               String?
  category            String?
  price               Float?
  currency            String?             @default("USD")
  budget              Float?
  targetAudience      String?
  contentRequirements String?
  deliverables        Json?
  kpis                Json?
  startDate           Int?
  endDate             Int?
  priority            String?             @default("medium")
  
  // 新增字段：国家和SKU序列
  country             String              // 国家/地区
  skuSeries           String              // SKU序列号，如：SKU_2025_CLOTHING_MEN_001
  
  status              Int                 @default(1) // 0-无效，1-有效
  createdAt           Int?
  updatedAt           Int?
  createdBy           BigInt?             // 关联到User.id，但没有外键约束

  @@unique([country, skuSeries]) // 国家和SKU组合唯一
  @@index([status])
  @@index([startDate])
  @@index([category])
  @@index([country])
  @@index([createdBy])
  @@map("cooperation_products")
}

model FulfillmentPlan {
  id                BigInt       @id
  planCode          String       @unique // 方案代码
  planName          String       // 方案名称
  requiresSample    Boolean      // 是否需要寄样
  contentType       String       // 内容类型：video, live, video_live
  isInfluencerMade  Boolean      // 是否达人自制
  initialStatus     String       // 初始状态
  description       String?      // 方案描述
  status            Int          @default(1) // 0-无效，1-有效
  createdAt         Int?
  updatedAt         Int?

  @@index([status])
  @@index([requiresSample])
  @@index([contentType])
  @@map("fulfillment_plans")
}

model FulfillmentSLA {
  id               BigInt       @id
  planId           BigInt       // 关联到FulfillmentPlan.id，但没有外键约束
  fromStatus       String       // 当前状态
  toStatus         String       // 目标状态
  durationHours    Int          // 标准耗时（小时）
  description      String?      // 时效说明
  status           Int          @default(1) // 0-无效，1-有效
  createdAt        Int?

  @@unique([planId, fromStatus, toStatus])
  @@index([planId])
  @@index([fromStatus])
  @@index([status])
  @@map("fulfillment_slas")
}

model FulfillmentRecord {
  id                       BigInt       @id
  influencerId             BigInt       // 关联到Influencer.id，但没有外键约束
  productId                BigInt       // 关联到CooperationProduct.id，但没有外键约束
  planId                   BigInt       // 关联到FulfillmentPlan.id，但没有外键约束
  ownerId                  BigInt       // 负责人ID，关联到User.id，但没有外键约束
  
  // 基础信息
  title                    String?      // 履约单标题
  description              String?      @db.Text // 任务描述
  priority                 String       @default("medium") // 优先级：low, medium, high, urgent
  
  // 当前状态信息
  currentStatus            String       // 当前履约状态
  recordStatus             String       @default("active") // 履约单业务状态：active, completed, cancelled
  currentStageStartTime    Int          // 当前阶段开始时间（时间戳）
  currentStageDeadline     Int?         // 当前阶段截止时间（时间戳）
  isCurrentStageOverdue    Boolean      @default(false) // 当前阶段是否逾期
  
  // 业务数据（单个内容）
  trackingNumber           String?      // 物流单号
  sampleDeliveryTime       Int?         // 样品签收时间（时间戳）
  contentGuidelines        String?      @db.Text // 制作指南
  videoUrl                 String?      // 单个视频/直播链接
  videoTitle               String?      // 视频/直播标题
  publishTime              Int?         // 发布时间（时间戳）
  adsRoi                   Float?       // 广告ROI
  conversionTags           Json?        // 转化标签
  
  // 系统字段
  status                   Int          @default(1) // 数据有效性：1-有效，0-无效
  createdAt                Int?
  updatedAt                Int?
  createdBy                BigInt?      // 关联到User.id，但没有外键约束
  updatedBy                BigInt?

  @@unique([influencerId, productId, planId, videoTitle]) // 达人+产品+方案+内容标题唯一
  @@index([influencerId])
  @@index([productId])
  @@index([planId])
  @@index([ownerId])
  @@index([currentStatus])
  @@index([recordStatus])
  @@index([isCurrentStageOverdue])
  @@index([currentStageDeadline])
  @@index([priority])
  @@index([status])
  @@index([createdAt])
  @@map("fulfillment_records")
}

model FulfillmentStatusLog {
  id                    BigInt       @id
  fulfillmentRecordId   BigInt       // 关联到FulfillmentRecord.id，但没有外键约束
  fromStatus            String?      // 原状态
  toStatus              String       // 新状态
  
  // 时效数据
  stageStartTime        Int          // 阶段开始时间（时间戳）
  stageEndTime          Int          // 阶段结束时间（时间戳）
  stageDeadline         Int?         // 阶段截止时间（时间戳）
  plannedDurationHours  Int?         // 计划耗时（小时）
  actualDurationHours   Int?         // 实际耗时（小时）
  isOverdue             Boolean      @default(false) // 是否逾期
  overdueHours          Int?         // 逾期小时数
  
  // 下一阶段预设
  nextStageDeadline     Int?         // 下一阶段截止时间（时间戳）
  
  // 操作信息
  changeReason          String?      @db.Text // 状态变更原因
  remarks               String?      @db.Text // 备注说明
  operatorId            BigInt?      // 操作人ID，关联到User.id，但没有外键约束
  
  status                Int          @default(1) // 数据有效性：1-有效，0-无效
  createdAt             Int?

  @@index([fulfillmentRecordId])
  @@index([fromStatus])
  @@index([toStatus])
  @@index([isOverdue])
  @@index([stageStartTime])
  @@index([operatorId])
  @@index([status])
  @@map("fulfillment_status_logs")
}

model FulfillmentRecordTag {
  id                    BigInt            @id
  fulfillmentRecordId   BigInt            // 关联到FulfillmentRecord.id，但没有外键约束
  tagId                 BigInt            // 关联到Tag.id，但没有外键约束
  confidence            Float?            @default(1)
  source                String?           @default("manual")
  status                Int               @default(1) // 0-无效，1-有效
  createdAt             Int?
  createdBy             BigInt?           // 关联到User.id，但没有外键约束

  @@unique([fulfillmentRecordId, tagId])
  @@index([fulfillmentRecordId])
  @@index([tagId])
  @@index([status])
  @@map("fulfillment_record_tags")
}

model CommunicationLog {
  id                  BigInt             @id
  influencerId        BigInt             // 关联到Influencer.id，但没有外键约束
  fulfillmentRecordId BigInt?            // 关联到FulfillmentRecord.id，但没有外键约束
  type                String
  direction           String
  subject             String?
  content             String
  attachments         Json?
  status              Int                @default(1) // 0-无效，1-有效
  isImportant         Boolean            @default(false)
  isFollowUpRequired  Boolean            @default(false)
  followUpDate        Int?
  communicationDate   Int
  createdAt           Int?
  createdBy           BigInt?            // 关联到User.id，但没有外键约束

  @@index([influencerId])
  @@index([fulfillmentRecordId])
  @@index([communicationDate])
  @@index([type])
  @@index([status])
  @@index([createdBy])
  @@map("communication_logs")
}

model ImportRecord {
  id             BigInt  @id
  fileName       String
  fileSize       Int?
  fileType       String?
  importType     String
  status         Int     @default(0) // 0-处理中，1-成功，2-失败
  totalRows      Int?    @default(0)
  successRows    Int?    @default(0)
  errorRows      Int?    @default(0)
  duplicateRows  Int?    @default(0)
  errorLog       String? @db.Text
  mapping        String? @db.Text
  startTime      Int?
  endTime        Int?
  processingTime Int?
  createdAt      Int?
  updatedAt      Int?
  createdBy      BigInt? // 关联到User.id，但没有外键约束

  @@index([importType])
  @@index([status])
  @@index([createdAt])
  @@map("import_records")
}

model SystemConfig {
  id          BigInt  @id
  key         String  @unique
  value       String
  category    String? @default("general")
  description String?
  isPublic    Boolean @default(false)
  status      Int     @default(1) // 0-无效，1-有效
  createdAt   Int?
  updatedAt   Int?

  @@index([category])
  @@index([status])
  @@map("system_configs")
}

model AuditLog {
  id         BigInt  @id
  userId     BigInt? // 关联到User.id，但没有外键约束
  action     String
  resource   String
  resourceId BigInt?
  oldValues  String? @db.Text
  newValues  String? @db.Text
  ip         String?
  userAgent  String?
  status     Int     @default(1) // 0-无效，1-有效
  createdAt  Int?

  @@index([userId])
  @@index([action])
  @@index([resource])
  @@index([createdAt])
  @@index([status])
  @@map("audit_logs")
}
